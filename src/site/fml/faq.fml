<?xml version="1.0" encoding="UTF-8"?>
<!--
~~ @version $Revision: 1756 $ ($Author: vlads $) $Date: 2008-06-16 22:29:11 -0400 (Mon, 16 Jun 2008) $
~~ See this file format http://maven.apache.org/maven-1.x/plugins/faq/  and http://maven.apache.org/maven-1.x/plugins/xdoc/
-->
<faqs title="Frequently Asked Questions">

    <part id="applet">
        <title>Applet</title>

        <faq id="SystemProperty">
            <question>
                My application in applet throws the java.security.AccessControlException: access denied (java.util.PropertyPermission ... read)
            </question>
            <answer>
                <p>
                Applet security restriction do not allow calls to System.getProperty(). You should use "Save for Web..." menu in main MicroEmulator application.
                </p>
            </answer>
        </faq>
    </part>

    <part id="general">
        <title>Compilation</title>

        <faq id="FilterInputStream">
            <question>
                Error preverifying class org.any.IOUtils <i>VERIFIER ERROR org/any/IOUtils.load()V: Cannot find class java/io/FilterInputStream</i>
            </question>
            <answer>
                <p>
                    This is because you are compiling your code with J2SE java.io.
                    And DataInputStream and DataOutputStream are inherited from FilterInputStream in J2SE
                    The problem in close() function.
                    Solution is to use InputStream.close(). Consider this example:
                    Instead of:
                    <source>
   DataInputStream din = new DataInputStream(..);
   din.close();
                    </source>
                   Use:
                    <source>
   DataInputStream din = new DataInputStream(..);
   ((InputStream)din).close();

    // or even better...

   silentClose(din);

   private void silentClose(InputStream is) {
        if (is == null) {
            return;
        }
        try {
            is.close();
        } catch (IOException ignore) {
        }
    }
                </source>
                </p>
            </answer>
        </faq>

        <faq id="avetanaBluetooth-integration">
            <question>
                How do I use avetanaBluetooth or BlueCove with MicroEmulator
            </question>
            <answer>
                All you need to do is to add avetanaBluetooth.jar to classpath after microemulator.jar. Remember that these JSR-82 implementations will not run in applet.

<source>
java -cp microemulator.jar;avetanaBluetooth.jar;YourApp.jar org.microemu.app.Main com.yourcompany.YourMidlet
or
java -cp microemulator.jar;bluecove-1.2.3.jar;YourApp.jar org.microemu.app.Main com.yourcompany.YourMidlet
</source>

                If you add microemulator.jar after JSR-82 implementations then Generic Connection Framework provided by MicroEmulator will not work. This includes http and Socket Connections.

            </answer>
        </faq>

        <faq id="avetanaBluetooth-bug">
            <question>
                When I run MIDlet compiled with avetana I get error  <i>java.lang.NoClassDefFoundError: de/avetana/bluetooth/connection/Connector</i>.
            </question>
            <answer>
                <p>
                This is because avetanaBluetooth.jar contains empty class javax.microedition.io.Connector that inherits from de.avetana.bluetooth.connection.Connector.
                This problem should be fixed in next avetana version 1.3.12.
                </p>
            </answer>
        </faq>

    </part>

    <part id="network">
        <title>Network configuration</title>

        <faq id="proxy">
            <question>
                 How can I ask MicroEmulator to use proxy server.
            </question>
            <answer>
                <p>
                Edit the configuration file <i>$home/.microemulator/config2.xml</i>.
<source>
<config>
    ...
    <system-properties>
	    <system-property name="http.proxyHost" value="webcache.mydomain.com"/>
	    <system-property name="http.proxyPort" value="8080"/>
	    <system-property name="http.nonProxyHosts" value="localhost"/>
    </system-properties>
    ...
</config>
</source>
                </p>
            </answer>
        </faq>
    </part>
</faqs>
